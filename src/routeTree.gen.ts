/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as SignInImport } from './routes/sign-in'
import { Route as NaturetourismImport } from './routes/nature_tourism'
import { Route as HistoryImport } from './routes/history'
import { Route as EthnogenesisImport } from './routes/ethnogenesis'
import { Route as IndexImport } from './routes/index'

// Create/Update Routes

const SignInRoute = SignInImport.update({
  id: '/sign-in',
  path: '/sign-in',
  getParentRoute: () => rootRoute,
} as any)

const NaturetourismRoute = NaturetourismImport.update({
  id: '/nature_tourism',
  path: '/nature_tourism',
  getParentRoute: () => rootRoute,
} as any)

const HistoryRoute = HistoryImport.update({
  id: '/history',
  path: '/history',
  getParentRoute: () => rootRoute,
} as any)

const EthnogenesisRoute = EthnogenesisImport.update({
  id: '/ethnogenesis',
  path: '/ethnogenesis',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/ethnogenesis': {
      id: '/ethnogenesis'
      path: '/ethnogenesis'
      fullPath: '/ethnogenesis'
      preLoaderRoute: typeof EthnogenesisImport
      parentRoute: typeof rootRoute
    }
    '/history': {
      id: '/history'
      path: '/history'
      fullPath: '/history'
      preLoaderRoute: typeof HistoryImport
      parentRoute: typeof rootRoute
    }
    '/nature_tourism': {
      id: '/nature_tourism'
      path: '/nature_tourism'
      fullPath: '/nature_tourism'
      preLoaderRoute: typeof NaturetourismImport
      parentRoute: typeof rootRoute
    }
    '/sign-in': {
      id: '/sign-in'
      path: '/sign-in'
      fullPath: '/sign-in'
      preLoaderRoute: typeof SignInImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/ethnogenesis': typeof EthnogenesisRoute
  '/history': typeof HistoryRoute
  '/nature_tourism': typeof NaturetourismRoute
  '/sign-in': typeof SignInRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/ethnogenesis': typeof EthnogenesisRoute
  '/history': typeof HistoryRoute
  '/nature_tourism': typeof NaturetourismRoute
  '/sign-in': typeof SignInRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/ethnogenesis': typeof EthnogenesisRoute
  '/history': typeof HistoryRoute
  '/nature_tourism': typeof NaturetourismRoute
  '/sign-in': typeof SignInRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths: '/' | '/ethnogenesis' | '/history' | '/nature_tourism' | '/sign-in'
  fileRoutesByTo: FileRoutesByTo
  to: '/' | '/ethnogenesis' | '/history' | '/nature_tourism' | '/sign-in'
  id:
    | '__root__'
    | '/'
    | '/ethnogenesis'
    | '/history'
    | '/nature_tourism'
    | '/sign-in'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  EthnogenesisRoute: typeof EthnogenesisRoute
  HistoryRoute: typeof HistoryRoute
  NaturetourismRoute: typeof NaturetourismRoute
  SignInRoute: typeof SignInRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  EthnogenesisRoute: EthnogenesisRoute,
  HistoryRoute: HistoryRoute,
  NaturetourismRoute: NaturetourismRoute,
  SignInRoute: SignInRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/ethnogenesis",
        "/history",
        "/nature_tourism",
        "/sign-in"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/ethnogenesis": {
      "filePath": "ethnogenesis.tsx"
    },
    "/history": {
      "filePath": "history.tsx"
    },
    "/nature_tourism": {
      "filePath": "nature_tourism.tsx"
    },
    "/sign-in": {
      "filePath": "sign-in.tsx"
    }
  }
}
ROUTE_MANIFEST_END */
